// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sqrt_CORDIC_HH_
#define _sqrt_CORDIC_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cordic_base.h"
#include "sqrt_CORDIC_uitofbkb.h"

namespace ap_rtl {

struct sqrt_CORDIC : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > returnValue_din;
    sc_in< sc_logic > returnValue_full_n;
    sc_out< sc_logic > returnValue_write;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    sqrt_CORDIC(sc_module_name name);
    SC_HAS_PROCESS(sqrt_CORDIC);

    ~sqrt_CORDIC();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cordic_base* grp_cordic_base_fu_66;
    sqrt_CORDIC_uitofbkb<1,2,32,32>* sqrt_CORDIC_uitofbkb_U2;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > returnValue_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<10> > i_1_fu_80_p2;
    sc_signal< sc_lv<10> > i_1_reg_154;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<48> > input_in_V_fu_90_p3;
    sc_signal< sc_lv<48> > input_in_V_reg_159;
    sc_signal< sc_lv<1> > exitcond_fu_74_p2;
    sc_signal< sc_lv<25> > grp_cordic_base_fu_66_ap_return;
    sc_signal< sc_lv<25> > output_out_V_reg_164;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_cordic_base_fu_66_ap_done;
    sc_signal< sc_lv<1> > tmp_3_fu_99_p2;
    sc_signal< sc_lv<1> > tmp_3_reg_169;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > res_V_1_fu_109_p1;
    sc_signal< sc_lv<32> > res_V_1_reg_179;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > exp_V_reg_184;
    sc_signal< sc_logic > grp_cordic_base_fu_66_ap_start;
    sc_signal< sc_logic > grp_cordic_base_fu_66_ap_idle;
    sc_signal< sc_logic > grp_cordic_base_fu_66_ap_ready;
    sc_signal< sc_lv<10> > i_reg_55;
    sc_signal< sc_logic > ap_reg_grp_cordic_base_fu_66_ap_start;
    sc_signal< sc_lv<32> > grp_fu_71_p0;
    sc_signal< sc_lv<1> > tmp_fu_86_p1;
    sc_signal< sc_lv<32> > grp_fu_71_p1;
    sc_signal< sc_lv<8> > exp_V_2_fu_123_p2;
    sc_signal< sc_lv<32> > p_Result_s_fu_128_p5;
    sc_signal< sc_lv<32> > dp_fu_139_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_3E8;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<47> ap_const_lv47_0;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_E8;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dp_fu_139_p1();
    void thread_exitcond_fu_74_p2();
    void thread_exp_V_2_fu_123_p2();
    void thread_grp_cordic_base_fu_66_ap_start();
    void thread_grp_fu_71_p0();
    void thread_i_1_fu_80_p2();
    void thread_input_in_V_fu_90_p3();
    void thread_p_Result_s_fu_128_p5();
    void thread_res_V_1_fu_109_p1();
    void thread_returnValue_blk_n();
    void thread_returnValue_din();
    void thread_returnValue_write();
    void thread_tmp_3_fu_99_p2();
    void thread_tmp_fu_86_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
